load("@io_bazel_rules_go//go:def.bzl", "go_binary")
load("//lib:run_binary.bzl", "run_binary")
load("//lib:write_source_files.bzl", "write_source_files")

go_binary(
    name = "gen_vis_scripts",
    srcs = ["gen_vis_scripts.go"],
)

run_binary(
    name = "run_gen_vis_scripts",
    outs = [
        "unvis_canonical.sed",
        "vis_canonicalize.sed",
        "vis_escape_ascii.bzl",
        "vis_escape_nonascii.sed",
    ],
    args = [
        "unvis_canonical.sed=$(location unvis_canonical.sed)",
        "vis_canonicalize.sed=$(location vis_canonicalize.sed)",
        "vis_escape_ascii.bzl=$(location vis_escape_ascii.bzl)",
        "vis_escape_nonascii.sed=$(location vis_escape_nonascii.sed)",
    ],
    tool = ":gen_vis_scripts",
)

write_source_files(
    name = "write_vis_scripts",

    # Required to support cross-package references.
    check_that_out_file_exists = False,
    #
    files = {
        "//lib/private:unvis_canonical.sed": ":unvis_canonical.sed",
        "//lib/private:vis_canonicalize.sed": ":vis_canonicalize.sed",
        "//lib/private:vis_escape_ascii.bzl": ":vis_escape_ascii.bzl",
        "//lib/private:vis_escape_nonascii.sed": ":vis_escape_nonascii.sed",
    },
)
