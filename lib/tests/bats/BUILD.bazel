load("//lib:bats.bzl", "bats_test")

NOT_WINDOWS = select({
    "@platforms//os:windows": ["@platforms//:incompatible"],
    "//conditions:default": [],
})

bats_test(
    name = "basic",
    size = "small",
    srcs = [
        "basic.bats",
    ],
    # fails on windows with 'ln: failed to create symbolic link '/tmp/bats-run-x4zjoi/file/0-basic.bats.source_file': Operation not permitted'
    target_compatible_with = NOT_WINDOWS,
)

bats_test(
    name = "env",
    size = "small",
    srcs = [
        "env.bats",
    ],
    env = {
        "USE_BAZEL_VERSION": "latest",
    },
    # fails on windows with 'ln: failed to create symbolic link '/tmp/bats-run-x4zjoi/file/0-basic.bats.source_file': Operation not permitted'
    target_compatible_with = NOT_WINDOWS,
)

bats_test(
    name = "args",
    size = "small",
    srcs = [
        "basic.bats",
    ],
    args = ["--timing"],
    # flaky on windows; timeouts
    target_compatible_with = NOT_WINDOWS,
)

bats_test(
    name = "env_expansion",
    size = "small",
    srcs = [
        "env_expansion.bats",
    ],
    data = [
        "data.bin",
    ],
    env = {
        "DATA_PATH": "$(location :data.bin)",
    },
    # fails on windows with 'ln: failed to create symbolic link '/tmp/bats-run-x4zjoi/file/0-basic.bats.source_file': Operation not permitted'
    target_compatible_with = NOT_WINDOWS,
)

bats_test(
    name = "additional_lib",
    size = "small",
    srcs = [
        "additional_lib.bats",
    ],
    target_compatible_with = select({
        # TODO(thesayyn): incompatible with bzlmod
        "@bazel_lib//lib:bzlmod": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
